[
  {
    "url": "https://api.github.com/repos/http2/http2-spec/issues/186",
    "labels_url": "https://api.github.com/repos/http2/http2-spec/issues/186/labels{/name}",
    "comments_url": "https://api.github.com/repos/http2/http2-spec/issues/186/comments",
    "events_url": "https://api.github.com/repos/http2/http2-spec/issues/186/events",
    "html_url": "https://github.com/http2/http2-spec/issues/186",
    "id": 17574916,
    "number": 186,
    "title": "Casing of \"HTTP/2.0\" string with ALPN",
    "user": {
      "login": "andrewrockwell",
      "id": 1418312,
      "avatar_url": "https://secure.gravatar.com/avatar/582532613ae5521ef8968a9078403df2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "582532613ae5521ef8968a9078403df2",
      "url": "https://api.github.com/users/andrewrockwell",
      "html_url": "https://github.com/andrewrockwell",
      "followers_url": "https://api.github.com/users/andrewrockwell/followers",
      "following_url": "https://api.github.com/users/andrewrockwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/andrewrockwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andrewrockwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andrewrockwell/subscriptions",
      "organizations_url": "https://api.github.com/users/andrewrockwell/orgs",
      "repos_url": "https://api.github.com/users/andrewrockwell/repos",
      "events_url": "https://api.github.com/users/andrewrockwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andrewrockwell/received_events",
      "type": "User"
    },
    "labels": [

    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 2,
    "created_at": "2013-08-02T18:40:02Z",
    "updated_at": "2013-08-02T23:43:24Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "The HTTP/2.0 spec should updated to include \"http/2.0\" as the protocol negotiated by ALPN, as opposed to the currently stated \"HTTP/2.0\" - difference in casing.\r\n\r\nIn section 3.1 of HTTP/2.0 Draft 4 spec, it  is stated that the string \"HTTP/2.0\" will be used to identify the HTTP/2.0 protocol in the TLS ALPN protocol negotiation extension field. In section 6 of the ALPN Draft 1 spec, it is stated that the string \"http/2.0\" will be used to identify the HTTP/2.0 protocol, which is consistent with the representation of other protocols in the IANA registry.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/http2/http2-spec/issues/185",
    "labels_url": "https://api.github.com/repos/http2/http2-spec/issues/185/labels{/name}",
    "comments_url": "https://api.github.com/repos/http2/http2-spec/issues/185/comments",
    "events_url": "https://api.github.com/repos/http2/http2-spec/issues/185/events",
    "html_url": "https://github.com/http2/http2-spec/issues/185",
    "id": 17548196,
    "number": 185,
    "title": "Ensure TCP receive buffer is completely drained",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://secure.gravatar.com/avatar/3fa6569f8aa70b9a0a7df4ad7bebc0df?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "3fa6569f8aa70b9a0a7df4ad7bebc0df",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/http2/http2-spec/labels/design",
        "name": "design",
        "color": "02d7e1"
      },
      {
        "url": "https://api.github.com/repos/http2/http2-spec/labels/flow+control",
        "name": "flow control",
        "color": "fbca04"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 1,
    "created_at": "2013-08-02T07:41:45Z",
    "updated_at": "2013-08-02T12:44:03Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "From @grmocg.\r\n\r\nWhen using flow control, the receiver MUST read from the TCP receive buffer in a timely fashion.  Failure to do so could lead to a deadlock when critical frames, such as WINDOW_UPDATE, are not available to the HTTP layer."
  },
  {
    "url": "https://api.github.com/repos/http2/http2-spec/issues/184",
    "labels_url": "https://api.github.com/repos/http2/http2-spec/issues/184/labels{/name}",
    "comments_url": "https://api.github.com/repos/http2/http2-spec/issues/184/comments",
    "events_url": "https://api.github.com/repos/http2/http2-spec/issues/184/events",
    "html_url": "https://github.com/http2/http2-spec/issues/184",
    "id": 17489286,
    "number": 184,
    "title": "send server settings within TLS handshake",
    "user": {
      "login": "GabrielMontenegro",
      "id": 4130792,
      "avatar_url": "https://secure.gravatar.com/avatar/63297c31e5ceb3ddb64b3b38bed4d117?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "63297c31e5ceb3ddb64b3b38bed4d117",
      "url": "https://api.github.com/users/GabrielMontenegro",
      "html_url": "https://github.com/GabrielMontenegro",
      "followers_url": "https://api.github.com/users/GabrielMontenegro/followers",
      "following_url": "https://api.github.com/users/GabrielMontenegro/following{/other_user}",
      "gists_url": "https://api.github.com/users/GabrielMontenegro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GabrielMontenegro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GabrielMontenegro/subscriptions",
      "organizations_url": "https://api.github.com/users/GabrielMontenegro/orgs",
      "repos_url": "https://api.github.com/users/GabrielMontenegro/repos",
      "events_url": "https://api.github.com/users/GabrielMontenegro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GabrielMontenegro/received_events",
      "type": "User"
    },
    "labels": [

    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2013-08-01T03:39:40Z",
    "updated_at": "2013-08-01T03:39:40Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "Need to decide if we want the server to send its settings within the TLS handshake so the client always starts with full knowledge of the server preferences. This would imply a request to the TLS WG to carry a blob and for the http/2 spec to use that blob accordingly."
  },
  {
    "url": "https://api.github.com/repos/http2/http2-spec/issues/183",
    "labels_url": "https://api.github.com/repos/http2/http2-spec/issues/183/labels{/name}",
    "comments_url": "https://api.github.com/repos/http2/http2-spec/issues/183/comments",
    "events_url": "https://api.github.com/repos/http2/http2-spec/issues/183/events",
    "html_url": "https://github.com/http2/http2-spec/issues/183",
    "id": 17308397,
    "number": 183,
    "title": "Content of continuations",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://secure.gravatar.com/avatar/3fa6569f8aa70b9a0a7df4ad7bebc0df?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "3fa6569f8aa70b9a0a7df4ad7bebc0df",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/http2/http2-spec/labels/design",
        "name": "design",
        "color": "02d7e1"
      },
      {
        "url": "https://api.github.com/repos/http2/http2-spec/labels/frame+layout",
        "name": "frame layout",
        "color": "fbca04"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": {
      "url": "https://api.github.com/repos/http2/http2-spec/milestones/2",
      "labels_url": "https://api.github.com/repos/http2/http2-spec/milestones/2/labels",
      "id": 391046,
      "number": 2,
      "title": "Second Implementation Draft",
      "description": "",
      "creator": {
        "login": "mnot",
        "id": 74384,
        "avatar_url": "https://secure.gravatar.com/avatar/38f92fdb9ac1b5213d40c595b14ec620?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
        "gravatar_id": "38f92fdb9ac1b5213d40c595b14ec620",
        "url": "https://api.github.com/users/mnot",
        "html_url": "https://github.com/mnot",
        "followers_url": "https://api.github.com/users/mnot/followers",
        "following_url": "https://api.github.com/users/mnot/following{/other_user}",
        "gists_url": "https://api.github.com/users/mnot/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/mnot/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mnot/subscriptions",
        "organizations_url": "https://api.github.com/users/mnot/orgs",
        "repos_url": "https://api.github.com/users/mnot/repos",
        "events_url": "https://api.github.com/users/mnot/events{/privacy}",
        "received_events_url": "https://api.github.com/users/mnot/received_events",
        "type": "User"
      },
      "open_issues": 6,
      "closed_issues": 0,
      "state": "open",
      "created_at": "2013-07-31T09:17:59Z",
      "updated_at": "2013-07-31T15:11:32Z",
      "due_on": null
    },
    "comments": 0,
    "created_at": "2013-07-28T07:47:38Z",
    "updated_at": "2013-07-31T14:51:45Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "> HEADERS and PUSH PROMISE can have their header block fragmented among multiple contiguous frames. That's clear.\r\n> \r\n> For PP I'm a ltitle unusure how Promised-Stream-ID fits into those fragments. Is it present in all of them? the frame diagram seems to assert that it is present in every PP frame, but the definition of END_PUSH_PROMISE says \"the payload of all PUSH_PROMISE frames are concatenated and interpreted as a single block\". and the Promised-Stream-ID is definitely part of the definition of payload (which we have defined as everything after the first 8 bytes of frame header).\r\n> \r\n> The right thing is probably that it is present in all of them, but is not considered part of the payload for purposes of determining the header block. A clarification seems needed. If that's right, do we need a rule saying the Promised-Stream-ID must be the same across all the fragments?\r\n> \r\n> I think HEADERS has a similar problem with Priority.. it uses a \"payload\" definition of the headers block that would include priority (but shouldn't)...\r\n\r\nSo, what is the content of a continuation?"
  },
  {
    "url": "https://api.github.com/repos/http2/http2-spec/issues/182",
    "labels_url": "https://api.github.com/repos/http2/http2-spec/issues/182/labels{/name}",
    "comments_url": "https://api.github.com/repos/http2/http2-spec/issues/182/comments",
    "events_url": "https://api.github.com/repos/http2/http2-spec/issues/182/events",
    "html_url": "https://github.com/http2/http2-spec/issues/182",
    "id": 17129544,
    "number": 182,
    "title": "Fix off by one in flow control example",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://secure.gravatar.com/avatar/3fa6569f8aa70b9a0a7df4ad7bebc0df?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "3fa6569f8aa70b9a0a7df4ad7bebc0df",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/http2/http2-spec/labels/editorial",
        "name": "editorial",
        "color": "02e10c"
      },
      {
        "url": "https://api.github.com/repos/http2/http2-spec/labels/flow+control",
        "name": "flow control",
        "color": "fbca04"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2013-07-23T22:28:05Z",
    "updated_at": "2013-07-23T22:28:05Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "From Patrick:\r\n\r\n> For example, if the client sends 64KB immediately on connection\r\n   establishment,\r\n\r\nThe example uses an invalid computation because the default window is \"64KB - 1\""
  },
  {
    "url": "https://api.github.com/repos/http2/http2-spec/issues/181",
    "labels_url": "https://api.github.com/repos/http2/http2-spec/issues/181/labels{/name}",
    "comments_url": "https://api.github.com/repos/http2/http2-spec/issues/181/comments",
    "events_url": "https://api.github.com/repos/http2/http2-spec/issues/181/events",
    "html_url": "https://github.com/http2/http2-spec/issues/181",
    "id": 17129133,
    "number": 181,
    "title": "SETTINGS_FLOW_CONTROL_OPTIONS ",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://secure.gravatar.com/avatar/3fa6569f8aa70b9a0a7df4ad7bebc0df?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "3fa6569f8aa70b9a0a7df4ad7bebc0df",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/http2/http2-spec/labels/editorial",
        "name": "editorial",
        "color": "02e10c"
      },
      {
        "url": "https://api.github.com/repos/http2/http2-spec/labels/flow+control",
        "name": "flow control",
        "color": "fbca04"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2013-07-23T22:18:27Z",
    "updated_at": "2013-07-23T22:18:27Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "From Patrick McManus:\r\n\r\nI found this really confusing:\r\n\r\n>  SETTINGS_FLOW_CONTROL_OPTIONS (10):  indicates that streams directed\r\n>     to the sender will not be subject to flow control.  The least\r\n>    significant bit (0x1) of the value is set to indicate that new\r\n>    streams are not flow controlled.  All other bits are reserved.\r\n>\r\n>    This setting applies to all streams, including existing streams.\r\n>\r\n>    These bits cannot be cleared once set, see Section 6.9.4.\r\n\r\n1. does the value always need to be 1? The option as a whole is defined to indicate that \"streams .. will not be subject to flow control\" - so not setting the value would seem to be inconsistent. But if the value can only be 1, why define a value at all? Maybe the option definition is misleading and should be \"whether or not streams will be subject to flow control\"?\r\n\r\n2. \"This setting applies to all streams, including existing ones\".. but the \"value is set to indicate that new streams are not flow controlled\" (implying existing streams are not impacted).\r\n\r\n3. \"These bits cannot be..\".. bits is plural, but only 1 bit is defined.\r\n\r\nbarring better advice, for my -04 implementation I am going to test the low bit of the value, and if true apply the logic to all present and future sends directed to the sender of the option."
  },
  {
    "url": "https://api.github.com/repos/http2/http2-spec/issues/180",
    "labels_url": "https://api.github.com/repos/http2/http2-spec/issues/180/labels{/name}",
    "comments_url": "https://api.github.com/repos/http2/http2-spec/issues/180/comments",
    "events_url": "https://api.github.com/repos/http2/http2-spec/issues/180/events",
    "html_url": "https://github.com/http2/http2-spec/issues/180",
    "id": 17112497,
    "number": 180,
    "title": "No push promise if maximum concurrent streams is zero",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://secure.gravatar.com/avatar/3fa6569f8aa70b9a0a7df4ad7bebc0df?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "3fa6569f8aa70b9a0a7df4ad7bebc0df",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/http2/http2-spec/labels/editorial",
        "name": "editorial",
        "color": "02e10c"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2013-07-23T16:56:47Z",
    "updated_at": "2013-07-23T16:56:47Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "Currently, we sort of suggest that setting the maximum concurrent streams to zero disables push, but it doesn't really state that you can't send a push promise.  This would be pointless, but it's still worth adding a specific prohibition.\r\n\r\nSuggested addition (in need of a bit of a rewording):\r\n\r\n>  Servers MUST NOT push or promise to push if a client advertises a\r\nvalue of 0 for SETTINGS_MAX_CONCURRENT_STREAMS."
  },
  {
    "url": "https://api.github.com/repos/http2/http2-spec/issues/179",
    "labels_url": "https://api.github.com/repos/http2/http2-spec/issues/179/labels{/name}",
    "comments_url": "https://api.github.com/repos/http2/http2-spec/issues/179/comments",
    "events_url": "https://api.github.com/repos/http2/http2-spec/issues/179/events",
    "html_url": "https://github.com/http2/http2-spec/issues/179",
    "id": 16905340,
    "number": 179,
    "title": "Add condition of a promised stream in receiving PUSH_PROMISE",
    "user": {
      "login": "shigeki",
      "id": 782880,
      "avatar_url": "https://secure.gravatar.com/avatar/e2cf334c8ea8452a467efc8a0c64d883?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "e2cf334c8ea8452a467efc8a0c64d883",
      "url": "https://api.github.com/users/shigeki",
      "html_url": "https://github.com/shigeki",
      "followers_url": "https://api.github.com/users/shigeki/followers",
      "following_url": "https://api.github.com/users/shigeki/following{/other_user}",
      "gists_url": "https://api.github.com/users/shigeki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shigeki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shigeki/subscriptions",
      "organizations_url": "https://api.github.com/users/shigeki/orgs",
      "repos_url": "https://api.github.com/users/shigeki/repos",
      "events_url": "https://api.github.com/users/shigeki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shigeki/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/http2/http2-spec/labels/editorial",
        "name": "editorial",
        "color": "02e10c"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 1,
    "created_at": "2013-07-18T06:26:52Z",
    "updated_at": "2013-07-18T17:43:56Z",
    "closed_at": null,
    "pull_request": {
      "html_url": "https://github.com/http2/http2-spec/pull/179",
      "diff_url": "https://github.com/http2/http2-spec/pull/179.diff",
      "patch_url": "https://github.com/http2/http2-spec/pull/179.patch"
    },
    "body": "As shown in the table in #175, the promised stream MUST be in the \"idle\" state in receiving PUSH_PROMISE."
  },
  {
    "url": "https://api.github.com/repos/http2/http2-spec/issues/177",
    "labels_url": "https://api.github.com/repos/http2/http2-spec/issues/177/labels{/name}",
    "comments_url": "https://api.github.com/repos/http2/http2-spec/issues/177/comments",
    "events_url": "https://api.github.com/repos/http2/http2-spec/issues/177/events",
    "html_url": "https://github.com/http2/http2-spec/issues/177",
    "id": 16874281,
    "number": 177,
    "title": "PUSH_PROMISES at invalid times",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://secure.gravatar.com/avatar/3fa6569f8aa70b9a0a7df4ad7bebc0df?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "3fa6569f8aa70b9a0a7df4ad7bebc0df",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/http2/http2-spec/labels/design",
        "name": "design",
        "color": "02d7e1"
      },
      {
        "url": "https://api.github.com/repos/http2/http2-spec/labels/editor-ready",
        "name": "editor-ready",
        "color": "0b02e1"
      },
      {
        "url": "https://api.github.com/repos/http2/http2-spec/labels/server+push",
        "name": "server push",
        "color": "fbca04"
      }
    ],
    "state": "open",
    "assignee": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://secure.gravatar.com/avatar/3fa6569f8aa70b9a0a7df4ad7bebc0df?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "3fa6569f8aa70b9a0a7df4ad7bebc0df",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User"
    },
    "milestone": {
      "url": "https://api.github.com/repos/http2/http2-spec/milestones/2",
      "labels_url": "https://api.github.com/repos/http2/http2-spec/milestones/2/labels",
      "id": 391046,
      "number": 2,
      "title": "Second Implementation Draft",
      "description": "",
      "creator": {
        "login": "mnot",
        "id": 74384,
        "avatar_url": "https://secure.gravatar.com/avatar/38f92fdb9ac1b5213d40c595b14ec620?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
        "gravatar_id": "38f92fdb9ac1b5213d40c595b14ec620",
        "url": "https://api.github.com/users/mnot",
        "html_url": "https://github.com/mnot",
        "followers_url": "https://api.github.com/users/mnot/followers",
        "following_url": "https://api.github.com/users/mnot/following{/other_user}",
        "gists_url": "https://api.github.com/users/mnot/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/mnot/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mnot/subscriptions",
        "organizations_url": "https://api.github.com/users/mnot/orgs",
        "repos_url": "https://api.github.com/users/mnot/repos",
        "events_url": "https://api.github.com/users/mnot/events{/privacy}",
        "received_events_url": "https://api.github.com/users/mnot/received_events",
        "type": "User"
      },
      "open_issues": 6,
      "closed_issues": 0,
      "state": "open",
      "created_at": "2013-07-31T09:17:59Z",
      "updated_at": "2013-07-31T15:11:32Z",
      "due_on": null
    },
    "comments": 2,
    "created_at": "2013-07-17T16:23:57Z",
    "updated_at": "2013-07-31T15:47:11Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "In #175, the question of what to do with a PUSH_PROMISE that arrives at the wrong time was raised.  If the PUSH_PROMISE is otherwise a valid frame, it should be treated as an error, but there is the question of what to do about the promised stream.\r\n\r\nI propose that we treat this as a *connection* error."
  },
  {
    "url": "https://api.github.com/repos/http2/http2-spec/issues/176",
    "labels_url": "https://api.github.com/repos/http2/http2-spec/issues/176/labels{/name}",
    "comments_url": "https://api.github.com/repos/http2/http2-spec/issues/176/comments",
    "events_url": "https://api.github.com/repos/http2/http2-spec/issues/176/events",
    "html_url": "https://github.com/http2/http2-spec/issues/176",
    "id": 16874026,
    "number": 176,
    "title": "RST_STREAM for idle streams",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://secure.gravatar.com/avatar/3fa6569f8aa70b9a0a7df4ad7bebc0df?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "3fa6569f8aa70b9a0a7df4ad7bebc0df",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/http2/http2-spec/labels/design",
        "name": "design",
        "color": "02d7e1"
      },
      {
        "url": "https://api.github.com/repos/http2/http2-spec/labels/streams",
        "name": "streams",
        "color": "fbca04"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2013-07-17T16:18:54Z",
    "updated_at": "2013-07-17T16:26:19Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "As mentioned in #175, we need to decide if RST_STREAM on an idle stream is an error.\r\n\r\nI propose that this be a *connection* error."
  },
  {
    "url": "https://api.github.com/repos/http2/http2-spec/issues/175",
    "labels_url": "https://api.github.com/repos/http2/http2-spec/issues/175/labels{/name}",
    "comments_url": "https://api.github.com/repos/http2/http2-spec/issues/175/comments",
    "events_url": "https://api.github.com/repos/http2/http2-spec/issues/175/events",
    "html_url": "https://github.com/http2/http2-spec/issues/175",
    "id": 16872944,
    "number": 175,
    "title": "Stream state clarifications",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://secure.gravatar.com/avatar/3fa6569f8aa70b9a0a7df4ad7bebc0df?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "3fa6569f8aa70b9a0a7df4ad7bebc0df",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/http2/http2-spec/labels/editorial",
        "name": "editorial",
        "color": "02e10c"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 4,
    "created_at": "2013-07-17T16:00:11Z",
    "updated_at": "2013-07-18T06:32:58Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "From Shigeki Ohtsu:\r\n\r\nThe table is listed in\r\n\r\nhttp://html5.ohtsu.org/HTTP2_Stream_State.pdf\r\n\r\nIn writing this, I have the folowing five questions which are painted gray in\r\nthe table field.\r\n\r\n1. Receiving RST_STREAM in \"idle\"\r\nIs it a stream error with PROTOCOL_ERROR or falled into \"closed\" state?\r\n\r\n2. Receivng PRIRORITY and WINDOW_UPDATE in \"half closed(local)\"\r\nThey are not necessary. So is it to be an error or ignored?\r\n\r\n3. Sending PRIORITY in \"half closed(remote)\"\r\nNo description about this case is in the draft. Is it prohibited?\r\n\r\n4. Receiving RST_STREAM in \"closed\"\r\nThe draft says that \" An endpoint that sends a RST_STREAM frame MUST ignore\r\nframes that it receives on closed streams after it has sent a RST_STREAM frame.\"\r\nIs this ignored always in the closed state or only in the case\r\nafter RST_STREAM sent?\r\n\r\n5. Receiving PUSH_PROMISE in \"closed\"\r\nThe draft says that 'An endpoint might receive a PUSH_PROMISE frame after\r\nit sends RST_STREAM. PUSH_PROMISE causes a stream to become \"reserved\".'\r\n\r\n6. The same question as above.\r\nIs PUSH_PROMISE always leads the associted stream to be reserved(remote)\r\nin the closed state? Or is it limited in the case after RST_STREAM was sent?"
  },
  {
    "url": "https://api.github.com/repos/http2/http2-spec/issues/174",
    "labels_url": "https://api.github.com/repos/http2/http2-spec/issues/174/labels{/name}",
    "comments_url": "https://api.github.com/repos/http2/http2-spec/issues/174/comments",
    "events_url": "https://api.github.com/repos/http2/http2-spec/issues/174/events",
    "html_url": "https://github.com/http2/http2-spec/issues/174",
    "id": 16782481,
    "number": 174,
    "title": "Make duplicate settings a PROTOCOL_ERROR",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://secure.gravatar.com/avatar/3fa6569f8aa70b9a0a7df4ad7bebc0df?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "3fa6569f8aa70b9a0a7df4ad7bebc0df",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/http2/http2-spec/labels/design",
        "name": "design",
        "color": "02d7e1"
      },
      {
        "url": "https://api.github.com/repos/http2/http2-spec/labels/frame+semantics",
        "name": "frame semantics",
        "color": "fbca04"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": {
      "url": "https://api.github.com/repos/http2/http2-spec/milestones/2",
      "labels_url": "https://api.github.com/repos/http2/http2-spec/milestones/2/labels",
      "id": 391046,
      "number": 2,
      "title": "Second Implementation Draft",
      "description": "",
      "creator": {
        "login": "mnot",
        "id": 74384,
        "avatar_url": "https://secure.gravatar.com/avatar/38f92fdb9ac1b5213d40c595b14ec620?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
        "gravatar_id": "38f92fdb9ac1b5213d40c595b14ec620",
        "url": "https://api.github.com/users/mnot",
        "html_url": "https://github.com/mnot",
        "followers_url": "https://api.github.com/users/mnot/followers",
        "following_url": "https://api.github.com/users/mnot/following{/other_user}",
        "gists_url": "https://api.github.com/users/mnot/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/mnot/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mnot/subscriptions",
        "organizations_url": "https://api.github.com/users/mnot/orgs",
        "repos_url": "https://api.github.com/users/mnot/repos",
        "events_url": "https://api.github.com/users/mnot/events{/privacy}",
        "received_events_url": "https://api.github.com/users/mnot/received_events",
        "type": "User"
      },
      "open_issues": 6,
      "closed_issues": 0,
      "state": "open",
      "created_at": "2013-07-31T09:17:59Z",
      "updated_at": "2013-07-31T15:11:32Z",
      "due_on": null
    },
    "comments": 1,
    "created_at": "2013-07-15T22:20:11Z",
    "updated_at": "2013-07-31T15:05:31Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "The draft currently prohibits duplicate settings, but also requires receivers of duplicate settings to ignore all but the first.\r\n\r\nPatrick suggests that we instead permit implementations to treat duplicates as a protocol error."
  },
  {
    "url": "https://api.github.com/repos/http2/http2-spec/issues/173",
    "labels_url": "https://api.github.com/repos/http2/http2-spec/issues/173/labels{/name}",
    "comments_url": "https://api.github.com/repos/http2/http2-spec/issues/173/comments",
    "events_url": "https://api.github.com/repos/http2/http2-spec/issues/173/events",
    "html_url": "https://github.com/http2/http2-spec/issues/173",
    "id": 16764773,
    "number": 173,
    "title": "Note that magic doesn't use the version identifier string",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://secure.gravatar.com/avatar/3fa6569f8aa70b9a0a7df4ad7bebc0df?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "3fa6569f8aa70b9a0a7df4ad7bebc0df",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/http2/http2-spec/labels/editorial",
        "name": "editorial",
        "color": "02e10c"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2013-07-15T16:51:48Z",
    "updated_at": "2013-07-15T16:51:48Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "We've had some confusion about this, for good reason:\r\n\r\nOn 15 July 2013 06:01, Amos Jeffries <squid3@treenet.co.nz> wrote:\r\n> I think this particular section 3.5 needs a second explicit note to the\r\n> effect that the opaque [magic] blob should be adjusted for the draft-specific\r\n> identifier.\r\n\r\nThis magic string MUST NOT be changed."
  },
  {
    "url": "https://api.github.com/repos/http2/http2-spec/issues/172",
    "labels_url": "https://api.github.com/repos/http2/http2-spec/issues/172/labels{/name}",
    "comments_url": "https://api.github.com/repos/http2/http2-spec/issues/172/comments",
    "events_url": "https://api.github.com/repos/http2/http2-spec/issues/172/events",
    "html_url": "https://github.com/http2/http2-spec/issues/172",
    "id": 16594504,
    "number": 172,
    "title": "Set a baseline for TLS implementation",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://secure.gravatar.com/avatar/3fa6569f8aa70b9a0a7df4ad7bebc0df?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "3fa6569f8aa70b9a0a7df4ad7bebc0df",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/http2/http2-spec/labels/design",
        "name": "design",
        "color": "02d7e1"
      },
      {
        "url": "https://api.github.com/repos/http2/http2-spec/labels/transport+mapping",
        "name": "transport mapping",
        "color": "fbca04"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2013-07-10T19:03:13Z",
    "updated_at": "2013-07-10T19:03:13Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "We've discussed the need to upgrade the basic profile that is supported by HTTP/2.0 implementations.  Currently, this includes the Server Name Indication (SNI) extension, and ALPN implicitly excludes SSLv3 from consideration, but are there other improvements we want?"
  },
  {
    "url": "https://api.github.com/repos/http2/http2-spec/issues/171",
    "labels_url": "https://api.github.com/repos/http2/http2-spec/issues/171/labels{/name}",
    "comments_url": "https://api.github.com/repos/http2/http2-spec/issues/171/comments",
    "events_url": "https://api.github.com/repos/http2/http2-spec/issues/171/events",
    "html_url": "https://github.com/http2/http2-spec/issues/171",
    "id": 16534153,
    "number": 171,
    "title": "Design: SYNC_ACK Frame Proposal",
    "user": {
      "login": "jasnell",
      "id": 439929,
      "avatar_url": "https://secure.gravatar.com/avatar/830962eaddef175acc258804975835f1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "830962eaddef175acc258804975835f1",
      "url": "https://api.github.com/users/jasnell",
      "html_url": "https://github.com/jasnell",
      "followers_url": "https://api.github.com/users/jasnell/followers",
      "following_url": "https://api.github.com/users/jasnell/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasnell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasnell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasnell/subscriptions",
      "organizations_url": "https://api.github.com/users/jasnell/orgs",
      "repos_url": "https://api.github.com/users/jasnell/repos",
      "events_url": "https://api.github.com/users/jasnell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasnell/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/http2/http2-spec/labels/design",
        "name": "design",
        "color": "02d7e1"
      },
      {
        "url": "https://api.github.com/repos/http2/http2-spec/labels/frame+semantics",
        "name": "frame semantics",
        "color": "fbca04"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 2,
    "created_at": "2013-07-09T16:27:08Z",
    "updated_at": "2013-07-09T22:44:27Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "Just getting this documented at this point... this is not a priority at this point...\r\n\r\nThe notion of an ACK mechanism (or new frame type) for things like resizing the header compression table size, window update, etc was discussed at the face to face in San Francisco. Action on it was deferred until after the initial interop. This is an initial strawman proposal we can use to frame the discussion around....\r\n\r\nACK Frame:\r\n\r\nACK frames are always sent in groups... when an endpoint wants to make sure that the peer has successfully received a particular sequence of frames, it can begin that sequence with an initial ACK frame. This tells the peer to begin a streaming hash of subsequently received frames. The sending endpoint would then send a ACK frame with DONE flag set and a payload equal to the calculated value of the hash. Upon receiving the second ACK frame, the peer MUST respond with it's own ACK frame with the RESP and DONE flags set. This response frame SHOULD be sent to the peer with the highest priority (like PING/PONG). A Sending Peer MUST NOT send more than one open ACK\r\n\r\nSo...\r\n\r\n```\r\nACK   ==>\r\n  -DONE ==> Means (Hey, pay attention to the next parts... I wanna know that you get them correctly)\r\nFRAMES.... ==>\r\nACK   ==>\r\n  +DONE ==> Means (Ok, this is the hash of what you should have received, did you get it?)\r\n   MD5 HASH\r\n   \r\n<==   ACK \r\n       +DONE\r\n       +RESP ==> Means (This is what I received)\r\n        MD5 HASH\r\n```\r\n        \r\nACK would have an additional optional flag ERROR. When set, it tells the endpoint to treat a hash mismatch as a connection error.\r\n\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/http2/http2-spec/issues/166",
    "labels_url": "https://api.github.com/repos/http2/http2-spec/issues/166/labels{/name}",
    "comments_url": "https://api.github.com/repos/http2/http2-spec/issues/166/comments",
    "events_url": "https://api.github.com/repos/http2/http2-spec/issues/166/events",
    "html_url": "https://github.com/http2/http2-spec/issues/166",
    "id": 16486839,
    "number": 166,
    "title": "confusing :path",
    "user": {
      "login": "andreineculau",
      "id": 708161,
      "avatar_url": "https://secure.gravatar.com/avatar/a990f5b18007f1a360ebd163626fe3f4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "a990f5b18007f1a360ebd163626fe3f4",
      "url": "https://api.github.com/users/andreineculau",
      "html_url": "https://github.com/andreineculau",
      "followers_url": "https://api.github.com/users/andreineculau/followers",
      "following_url": "https://api.github.com/users/andreineculau/following{/other_user}",
      "gists_url": "https://api.github.com/users/andreineculau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andreineculau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andreineculau/subscriptions",
      "organizations_url": "https://api.github.com/users/andreineculau/orgs",
      "repos_url": "https://api.github.com/users/andreineculau/repos",
      "events_url": "https://api.github.com/users/andreineculau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andreineculau/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/http2/http2-spec/labels/editorial",
        "name": "editorial",
        "color": "02e10c"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 1,
    "created_at": "2013-07-08T18:40:29Z",
    "updated_at": "2013-07-08T21:52:09Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "> :path, whose values specify [...] the request-target\r\n\r\nfrom https://github.com/http2/http2-spec/blob/master/draft-ietf-httpbis-http2.xml#L1762-1763.\r\n\r\nThe request-target was previously, in HTTP/1.1, referred to as `Request-URI`, and RFC3986 refers to path as a syntax component. This would make the HTTP/2.0 header `:path` equal to `<path>?<query>`.\r\n\r\nIf the above reasoning is correct, then wouldn't it be confusing to refer to path - would that be the request-target itself, or the path section of the request-target URI ?\r\n\r\nMaybe a clearer alternative would be: `:target` ? or leave it as `:path` and add a `:query` header ?"
  },
  {
    "url": "https://api.github.com/repos/http2/http2-spec/issues/165",
    "labels_url": "https://api.github.com/repos/http2/http2-spec/issues/165/labels{/name}",
    "comments_url": "https://api.github.com/repos/http2/http2-spec/issues/165/comments",
    "events_url": "https://api.github.com/repos/http2/http2-spec/issues/165/events",
    "html_url": "https://github.com/http2/http2-spec/issues/165",
    "id": 16443523,
    "number": 165,
    "title": "Stream state machine problems",
    "user": {
      "login": "molnarg",
      "id": 894421,
      "avatar_url": "https://secure.gravatar.com/avatar/1de036f8da344699448631306f8d8764?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "1de036f8da344699448631306f8d8764",
      "url": "https://api.github.com/users/molnarg",
      "html_url": "https://github.com/molnarg",
      "followers_url": "https://api.github.com/users/molnarg/followers",
      "following_url": "https://api.github.com/users/molnarg/following{/other_user}",
      "gists_url": "https://api.github.com/users/molnarg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/molnarg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/molnarg/subscriptions",
      "organizations_url": "https://api.github.com/users/molnarg/orgs",
      "repos_url": "https://api.github.com/users/molnarg/repos",
      "events_url": "https://api.github.com/users/molnarg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/molnarg/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/http2/http2-spec/labels/editorial",
        "name": "editorial",
        "color": "02e10c"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 3,
    "created_at": "2013-07-07T14:21:07Z",
    "updated_at": "2013-07-17T20:24:06Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "Not all interactions are well defined.\r\n\r\nidle state:\r\n * What to do when receiving frame other than HEADER and PUSH_PROMISE?\r\n\r\nreserved (local) state:\r\n * What to do when receiving frame other than RST_STREAM?\r\n\r\nopen state:\r\n * 'The \"open\" state is where both peers can send frames.' - only DATA frames or is there anything else that is valid?\r\n"
  },
  {
    "url": "https://api.github.com/repos/http2/http2-spec/issues/164",
    "labels_url": "https://api.github.com/repos/http2/http2-spec/issues/164/labels{/name}",
    "comments_url": "https://api.github.com/repos/http2/http2-spec/issues/164/comments",
    "events_url": "https://api.github.com/repos/http2/http2-spec/issues/164/events",
    "html_url": "https://github.com/http2/http2-spec/issues/164",
    "id": 16331286,
    "number": 164,
    "title": "HTTP Method Case",
    "user": {
      "login": "jasnell",
      "id": 439929,
      "avatar_url": "https://secure.gravatar.com/avatar/830962eaddef175acc258804975835f1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "830962eaddef175acc258804975835f1",
      "url": "https://api.github.com/users/jasnell",
      "html_url": "https://github.com/jasnell",
      "followers_url": "https://api.github.com/users/jasnell/followers",
      "following_url": "https://api.github.com/users/jasnell/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasnell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasnell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasnell/subscriptions",
      "organizations_url": "https://api.github.com/users/jasnell/orgs",
      "repos_url": "https://api.github.com/users/jasnell/repos",
      "events_url": "https://api.github.com/users/jasnell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasnell/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/http2/http2-spec/labels/editorial",
        "name": "editorial",
        "color": "02e10c"
      },
      {
        "url": "https://api.github.com/repos/http2/http2-spec/labels/HTTP+mapping",
        "name": "HTTP mapping",
        "color": "fbca04"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 3,
    "created_at": "2013-07-03T17:43:14Z",
    "updated_at": "2013-07-03T23:45:45Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "Currently, HTTP Methods in 1.1 are all uppercase. The preference for 2.0 so far appears to have those represented using all lowercase. The HTTP Mapping currently does not redefine the HTTP Method header to use lowercase values. Need to clarify whether or not HTTP methods in 2.0 are case sensitive or not."
  },
  {
    "url": "https://api.github.com/repos/http2/http2-spec/issues/158",
    "labels_url": "https://api.github.com/repos/http2/http2-spec/issues/158/labels{/name}",
    "comments_url": "https://api.github.com/repos/http2/http2-spec/issues/158/comments",
    "events_url": "https://api.github.com/repos/http2/http2-spec/issues/158/events",
    "html_url": "https://github.com/http2/http2-spec/issues/158",
    "id": 16250087,
    "number": 158,
    "title": ":scheme and :host for push",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://secure.gravatar.com/avatar/3fa6569f8aa70b9a0a7df4ad7bebc0df?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "3fa6569f8aa70b9a0a7df4ad7bebc0df",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/http2/http2-spec/labels/design",
        "name": "design",
        "color": "02d7e1"
      },
      {
        "url": "https://api.github.com/repos/http2/http2-spec/labels/server+push",
        "name": "server push",
        "color": "fbca04"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 2,
    "created_at": "2013-07-02T06:33:34Z",
    "updated_at": "2013-07-31T17:03:50Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "From spullara@gmail.com:\r\n> The header fields in PUSH_PROMISE MUST include the \":scheme\", \":host\"\r\n> and \":path\" header fields [...]\r\n\r\nSam suggests:\r\n> I suggest that you limit to same origin and remove the :schema [sic] and the :host.\r\n\r\nNote that this restriction is probably absent to allow for future enhancements, like those that relied on the (removed) CREDENTIALS frame.  A definition of future enhancements is, of course, perfectly capable of updating any RFC that defines a restrictive policy (i.e., this one) with a less restrictive policy, if needed."
  },
  {
    "url": "https://api.github.com/repos/http2/http2-spec/issues/156",
    "labels_url": "https://api.github.com/repos/http2/http2-spec/issues/156/labels{/name}",
    "comments_url": "https://api.github.com/repos/http2/http2-spec/issues/156/comments",
    "events_url": "https://api.github.com/repos/http2/http2-spec/issues/156/events",
    "html_url": "https://github.com/http2/http2-spec/issues/156",
    "id": 16241695,
    "number": 156,
    "title": "Pushing HEAD",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://secure.gravatar.com/avatar/3fa6569f8aa70b9a0a7df4ad7bebc0df?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "3fa6569f8aa70b9a0a7df4ad7bebc0df",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/http2/http2-spec/labels/design",
        "name": "design",
        "color": "02d7e1"
      },
      {
        "url": "https://api.github.com/repos/http2/http2-spec/labels/server+push",
        "name": "server push",
        "color": "fbca04"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2013-07-01T23:50:06Z",
    "updated_at": "2013-07-01T23:50:06Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "James tried to sneak in the ability to use server push for HEAD in #151.  I backed out those changes, but I do think that we do want to do this.  I just need a clear signal that we have consensus to add the feature."
  },
  {
    "url": "https://api.github.com/repos/http2/http2-spec/issues/153",
    "labels_url": "https://api.github.com/repos/http2/http2-spec/issues/153/labels{/name}",
    "comments_url": "https://api.github.com/repos/http2/http2-spec/issues/153/comments",
    "events_url": "https://api.github.com/repos/http2/http2-spec/issues/153/events",
    "html_url": "https://github.com/http2/http2-spec/issues/153",
    "id": 16167983,
    "number": 153,
    "title": "PUSH_PROMISE headers",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://secure.gravatar.com/avatar/3fa6569f8aa70b9a0a7df4ad7bebc0df?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "3fa6569f8aa70b9a0a7df4ad7bebc0df",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/http2/http2-spec/labels/design",
        "name": "design",
        "color": "02d7e1"
      },
      {
        "url": "https://api.github.com/repos/http2/http2-spec/labels/server+push",
        "name": "server push",
        "color": "fbca04"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 1,
    "created_at": "2013-06-29T00:20:30Z",
    "updated_at": "2013-07-01T23:47:00Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "The current text describes PUSH_PROMISE as having a few request headers, plus some response headers, but it's quite vague.\r\n\r\nI think that if this is going to be properly workable across a wide range of uses with lots of different headers, PUSH_PROMISE needs to include two sets of headers: the ones that it overrides from the associated request (:path being foremost of those) and the ones that it provides as a \"preview\" of the response (e.g., ETag might allow caches to determine if they were interested in the rest of the response).\r\n"
  },
  {
    "url": "https://api.github.com/repos/http2/http2-spec/issues/150",
    "labels_url": "https://api.github.com/repos/http2/http2-spec/issues/150/labels{/name}",
    "comments_url": "https://api.github.com/repos/http2/http2-spec/issues/150/comments",
    "events_url": "https://api.github.com/repos/http2/http2-spec/issues/150/events",
    "html_url": "https://github.com/http2/http2-spec/issues/150",
    "id": 16102958,
    "number": 150,
    "title": "Make mandatory settings mandatory on all SETTINGS frames",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://secure.gravatar.com/avatar/3fa6569f8aa70b9a0a7df4ad7bebc0df?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "3fa6569f8aa70b9a0a7df4ad7bebc0df",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User"
    },
    "labels": [

    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2013-06-27T17:13:27Z",
    "updated_at": "2013-07-22T22:54:02Z",
    "closed_at": null,
    "pull_request": {
      "html_url": "https://github.com/http2/http2-spec/pull/150",
      "diff_url": "https://github.com/http2/http2-spec/pull/150.diff",
      "patch_url": "https://github.com/http2/http2-spec/pull/150.patch"
    },
    "body": "1. Simplify the SETTINGS frame by making the common parameters required.\r\nThey already were required for the upgrade process, so just make them\r\nalways required (simpler).\r\n\r\n2. Simplify some wording."
  },
  {
    "url": "https://api.github.com/repos/http2/http2-spec/issues/144",
    "labels_url": "https://api.github.com/repos/http2/http2-spec/issues/144/labels{/name}",
    "comments_url": "https://api.github.com/repos/http2/http2-spec/issues/144/comments",
    "events_url": "https://api.github.com/repos/http2/http2-spec/issues/144/events",
    "html_url": "https://github.com/http2/http2-spec/issues/144",
    "id": 15756851,
    "number": 144,
    "title": "Adding ASSOCIATED_ONLY flag as discussed at the Interim",
    "user": {
      "login": "jasnell",
      "id": 439929,
      "avatar_url": "https://secure.gravatar.com/avatar/830962eaddef175acc258804975835f1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "830962eaddef175acc258804975835f1",
      "url": "https://api.github.com/users/jasnell",
      "html_url": "https://github.com/jasnell",
      "followers_url": "https://api.github.com/users/jasnell/followers",
      "following_url": "https://api.github.com/users/jasnell/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasnell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasnell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasnell/subscriptions",
      "organizations_url": "https://api.github.com/users/jasnell/orgs",
      "repos_url": "https://api.github.com/users/jasnell/repos",
      "events_url": "https://api.github.com/users/jasnell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasnell/received_events",
      "type": "User"
    },
    "labels": [

    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 1,
    "created_at": "2013-06-19T17:13:13Z",
    "updated_at": "2013-06-19T17:35:30Z",
    "closed_at": null,
    "pull_request": {
      "html_url": "https://github.com/http2/http2-spec/pull/144",
      "diff_url": "https://github.com/http2/http2-spec/pull/144.diff",
      "patch_url": "https://github.com/http2/http2-spec/pull/144.patch"
    },
    "body": "ASSOCIATED_ONLY on PRIORITY and RST_STREAM, better explanation and examples of promised stream association."
  },
  {
    "url": "https://api.github.com/repos/http2/http2-spec/issues/133",
    "labels_url": "https://api.github.com/repos/http2/http2-spec/issues/133/labels{/name}",
    "comments_url": "https://api.github.com/repos/http2/http2-spec/issues/133/comments",
    "events_url": "https://api.github.com/repos/http2/http2-spec/issues/133/events",
    "html_url": "https://github.com/http2/http2-spec/issues/133",
    "id": 15653857,
    "number": 133,
    "title": "GOAWAY status code or similar meaning \"don't use HTTP/2 when reconnecting\" would be good",
    "user": {
      "login": "grmocg",
      "id": 1006962,
      "avatar_url": "https://secure.gravatar.com/avatar/8c54ee6ec4fbcbc797a7a9b1a0dd2047?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "8c54ee6ec4fbcbc797a7a9b1a0dd2047",
      "url": "https://api.github.com/users/grmocg",
      "html_url": "https://github.com/grmocg",
      "followers_url": "https://api.github.com/users/grmocg/followers",
      "following_url": "https://api.github.com/users/grmocg/following{/other_user}",
      "gists_url": "https://api.github.com/users/grmocg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grmocg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grmocg/subscriptions",
      "organizations_url": "https://api.github.com/users/grmocg/orgs",
      "repos_url": "https://api.github.com/users/grmocg/repos",
      "events_url": "https://api.github.com/users/grmocg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grmocg/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/http2/http2-spec/labels/design",
        "name": "design",
        "color": "02d7e1"
      },
      {
        "url": "https://api.github.com/repos/http2/http2-spec/labels/streams",
        "name": "streams",
        "color": "fbca04"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 4,
    "created_at": "2013-06-17T20:24:31Z",
    "updated_at": "2013-06-17T23:41:16Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "Assuming that a server is dealing with a buggy client, it seems like a good idea to have a mechanism that tells the client to GOAWAY, and don't use this protocol when coming back.\r\n\r\nAs an example, if a server detects that the client is not responding correctly to flow control, the server could instruct it to not use HTTP/2 until the client is restarted (or similar).\r\n\r\nThis is likely not useful in the client->server direction.\r\n\r\nI think of this as similar to alternate-protocol, though it should not need a request to indicate that the protocol should not be reused.\r\n\r\nIt would be impractical to use this on the client->server direction for a number of reasons:\r\n1) The server would have to store millions or billions of entries\r\n2) There is no guarantee that a single server is dealing with the client, even if the client is connecting to one IP\r\n3) A single client should not be able to stop a server from serving HTTP/2 for others."
  },
  {
    "url": "https://api.github.com/repos/http2/http2-spec/issues/124",
    "labels_url": "https://api.github.com/repos/http2/http2-spec/issues/124/labels{/name}",
    "comments_url": "https://api.github.com/repos/http2/http2-spec/issues/124/comments",
    "events_url": "https://api.github.com/repos/http2/http2-spec/issues/124/events",
    "html_url": "https://github.com/http2/http2-spec/issues/124",
    "id": 15571604,
    "number": 124,
    "title": "COMEBACK goaway code",
    "user": {
      "login": "jasnell",
      "id": 439929,
      "avatar_url": "https://secure.gravatar.com/avatar/830962eaddef175acc258804975835f1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "830962eaddef175acc258804975835f1",
      "url": "https://api.github.com/users/jasnell",
      "html_url": "https://github.com/jasnell",
      "followers_url": "https://api.github.com/users/jasnell/followers",
      "following_url": "https://api.github.com/users/jasnell/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasnell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasnell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasnell/subscriptions",
      "organizations_url": "https://api.github.com/users/jasnell/orgs",
      "repos_url": "https://api.github.com/users/jasnell/repos",
      "events_url": "https://api.github.com/users/jasnell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasnell/received_events",
      "type": "User"
    },
    "labels": [

    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 2,
    "created_at": "2013-06-14T18:30:24Z",
    "updated_at": "2013-06-14T20:34:16Z",
    "closed_at": null,
    "pull_request": {
      "html_url": "https://github.com/http2/http2-spec/pull/124",
      "diff_url": "https://github.com/http2/http2-spec/pull/124.diff",
      "patch_url": "https://github.com/http2/http2-spec/pull/124.patch"
    },
    "body": "As proposed in the interim, a COMEBACK goaway code that requests that a new connection be established with the previous SETTINGS."
  },
  {
    "url": "https://api.github.com/repos/http2/http2-spec/issues/120",
    "labels_url": "https://api.github.com/repos/http2/http2-spec/issues/120/labels{/name}",
    "comments_url": "https://api.github.com/repos/http2/http2-spec/issues/120/comments",
    "events_url": "https://api.github.com/repos/http2/http2-spec/issues/120/events",
    "html_url": "https://github.com/http2/http2-spec/issues/120",
    "id": 15530378,
    "number": 120,
    "title": "Signal the acceptance of SETTINGS",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://secure.gravatar.com/avatar/3fa6569f8aa70b9a0a7df4ad7bebc0df?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "3fa6569f8aa70b9a0a7df4ad7bebc0df",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/http2/http2-spec/labels/design",
        "name": "design",
        "color": "02d7e1"
      },
      {
        "url": "https://api.github.com/repos/http2/http2-spec/labels/header+compression",
        "name": "header compression",
        "color": "fbca04"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 2,
    "created_at": "2013-06-13T21:10:30Z",
    "updated_at": "2013-06-14T20:43:50Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "In the header compression draft, it is possible to signal a SETTING for compression context size.  This require a mechanism for marking when that SETTING has been acted upon.\r\n\r\nThe first header compression draft proposes the use of HEADERS on stream 0.  Discussion in the SF interim led to a conclusion that an explicit ACK or reuse of SETTINGS was considered preferable, as was a more generally usable mechanism.  It need not be wholly generic, but should be possible to use for this purpose."
  },
  {
    "url": "https://api.github.com/repos/http2/http2-spec/issues/119",
    "labels_url": "https://api.github.com/repos/http2/http2-spec/issues/119/labels{/name}",
    "comments_url": "https://api.github.com/repos/http2/http2-spec/issues/119/comments",
    "events_url": "https://api.github.com/repos/http2/http2-spec/issues/119/events",
    "html_url": "https://github.com/http2/http2-spec/issues/119",
    "id": 15522511,
    "number": 119,
    "title": "Separate RST_STREAM for promised streams",
    "user": {
      "login": "martinthomson",
      "id": 67641,
      "avatar_url": "https://secure.gravatar.com/avatar/3fa6569f8aa70b9a0a7df4ad7bebc0df?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "3fa6569f8aa70b9a0a7df4ad7bebc0df",
      "url": "https://api.github.com/users/martinthomson",
      "html_url": "https://github.com/martinthomson",
      "followers_url": "https://api.github.com/users/martinthomson/followers",
      "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
      "organizations_url": "https://api.github.com/users/martinthomson/orgs",
      "repos_url": "https://api.github.com/users/martinthomson/repos",
      "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinthomson/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/http2/http2-spec/labels/design",
        "name": "design",
        "color": "02d7e1"
      },
      {
        "url": "https://api.github.com/repos/http2/http2-spec/labels/streams",
        "name": "streams",
        "color": "fbca04"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 1,
    "created_at": "2013-06-13T18:46:40Z",
    "updated_at": "2013-06-13T23:26:39Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "At the SF interim, @jpinner suggested that rather than have RST_STREAM reset all associated streams, to have that behavior tied to a flag on the RST_STREAM message.  When the flag is set, all pushed resources associated with the original request are reset.\r\n\r\nThis removes the coupling between the reset of a stream and its associated streams."
  },
  {
    "url": "https://api.github.com/repos/http2/http2-spec/issues/112",
    "labels_url": "https://api.github.com/repos/http2/http2-spec/issues/112/labels{/name}",
    "comments_url": "https://api.github.com/repos/http2/http2-spec/issues/112/comments",
    "events_url": "https://api.github.com/repos/http2/http2-spec/issues/112/events",
    "html_url": "https://github.com/http2/http2-spec/issues/112",
    "id": 15286644,
    "number": 112,
    "title": "Number and frequency of PING, empty DATA frames, etc. should be limited.",
    "user": {
      "login": "grmocg",
      "id": 1006962,
      "avatar_url": "https://secure.gravatar.com/avatar/8c54ee6ec4fbcbc797a7a9b1a0dd2047?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "8c54ee6ec4fbcbc797a7a9b1a0dd2047",
      "url": "https://api.github.com/users/grmocg",
      "html_url": "https://github.com/grmocg",
      "followers_url": "https://api.github.com/users/grmocg/followers",
      "following_url": "https://api.github.com/users/grmocg/following{/other_user}",
      "gists_url": "https://api.github.com/users/grmocg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grmocg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grmocg/subscriptions",
      "organizations_url": "https://api.github.com/users/grmocg/orgs",
      "repos_url": "https://api.github.com/users/grmocg/repos",
      "events_url": "https://api.github.com/users/grmocg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grmocg/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/http2/http2-spec/labels/design",
        "name": "design",
        "color": "02d7e1"
      },
      {
        "url": "https://api.github.com/repos/http2/http2-spec/labels/security",
        "name": "security",
        "color": "fbca04"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 5,
    "created_at": "2013-06-07T18:58:15Z",
    "updated_at": "2013-07-31T15:09:33Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "Currently, the spec doesn't prohibit sending an infinite number of PING frames, or sending a large number of empty DATA frames, or other damaging behaviors.\r\n\r\nThese behaviors are all DoS attacks-- it is better to limit the use of these features so that the most common ways of abusing these frames result in the proper feedback for a client (goaway).\r\n\r\nAs an example, it would be reasonable to require that at most one empty data frame could be sent for a particular stream, else the server sends a GOAWAY.\r\nIt would be reasonable to require that PING frames coming more than 3X as often as data frames would, else the server sends a GOAWAY\r\n\r\nThe above are obviously not the only ways of dealing with this, nor do they cover all cases. While imperfect, these kinds of rules would at least handle the inadvertent DoS attack of a buggy client, and some intentional DoS attacks."
  },
  {
    "url": "https://api.github.com/repos/http2/http2-spec/issues/103",
    "labels_url": "https://api.github.com/repos/http2/http2-spec/issues/103/labels{/name}",
    "comments_url": "https://api.github.com/repos/http2/http2-spec/issues/103/comments",
    "events_url": "https://api.github.com/repos/http2/http2-spec/issues/103/events",
    "html_url": "https://github.com/http2/http2-spec/issues/103",
    "id": 14863666,
    "number": 103,
    "title": "The FINAL Flag",
    "user": {
      "login": "jpinner",
      "id": 850440,
      "avatar_url": "https://secure.gravatar.com/avatar/804ebb3c4f539f15f84b75383e016842?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "804ebb3c4f539f15f84b75383e016842",
      "url": "https://api.github.com/users/jpinner",
      "html_url": "https://github.com/jpinner",
      "followers_url": "https://api.github.com/users/jpinner/followers",
      "following_url": "https://api.github.com/users/jpinner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jpinner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jpinner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jpinner/subscriptions",
      "organizations_url": "https://api.github.com/users/jpinner/orgs",
      "repos_url": "https://api.github.com/users/jpinner/repos",
      "events_url": "https://api.github.com/users/jpinner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jpinner/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/http2/http2-spec/labels/frame+semantics",
        "name": "frame semantics",
        "color": "fbca04"
      },
      {
        "url": "https://api.github.com/repos/http2/http2-spec/labels/Layering+TF",
        "name": "Layering TF",
        "color": "006b75"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 3,
    "created_at": "2013-05-28T21:54:28Z",
    "updated_at": "2013-06-25T03:27:34Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "Wording exists that says implementations MUST process this flag for all frames whose stream identifier field is not 0x0.\r\n\r\nCan we insert wording that states that the flag MUST be left unset (0) when sending frames who stream identifier is 0x0 (for example SETTINGS, GOAWAY, or PING)? Also SETTINGS has text to indicate that the FINAL flag should be ignored -- should this be added to PING and GOAWAY as well?\r\n\r\nWhat about RST_STREAM frames? Should we insert wording that the flag MUST be set?\r\n\r\nAnd finally what about WINDOW_UPDATE?\r\n"
  },
  {
    "url": "https://api.github.com/repos/http2/http2-spec/issues/95",
    "labels_url": "https://api.github.com/repos/http2/http2-spec/issues/95/labels{/name}",
    "comments_url": "https://api.github.com/repos/http2/http2-spec/issues/95/comments",
    "events_url": "https://api.github.com/repos/http2/http2-spec/issues/95/events",
    "html_url": "https://github.com/http2/http2-spec/issues/95",
    "id": 14223483,
    "number": 95,
    "title": "Frame Type Extensibility Issues",
    "user": {
      "login": "jasnell",
      "id": 439929,
      "avatar_url": "https://secure.gravatar.com/avatar/830962eaddef175acc258804975835f1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "830962eaddef175acc258804975835f1",
      "url": "https://api.github.com/users/jasnell",
      "html_url": "https://github.com/jasnell",
      "followers_url": "https://api.github.com/users/jasnell/followers",
      "following_url": "https://api.github.com/users/jasnell/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasnell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasnell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasnell/subscriptions",
      "organizations_url": "https://api.github.com/users/jasnell/orgs",
      "repos_url": "https://api.github.com/users/jasnell/repos",
      "events_url": "https://api.github.com/users/jasnell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasnell/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/http2/http2-spec/labels/design",
        "name": "design",
        "color": "02d7e1"
      },
      {
        "url": "https://api.github.com/repos/http2/http2-spec/labels/frame+semantics",
        "name": "frame semantics",
        "color": "fbca04"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 1,
    "created_at": "2013-05-11T16:13:11Z",
    "updated_at": "2013-06-13T18:52:30Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "There are a couple of issues relating to frame type extensibility:\r\n\r\n1. Are frames end-to-end or hop-by-hop? This is currently undefined. Control frames appear to always be hop-by-hop, Header bearing frames might or might not be hop-by-hop, Data frames appear to always be end-to-end. What about new extension frame types?\r\n\r\n2. Are new unsupported frame types subject to flow control? How can we differentiate new control frame types vs. data frame types?\r\n\r\n3. There is no prescribed mechanism for rolling out support for new standard frame types vs. private use frame types.\r\n\r\nRecommendation:\r\n\r\nOne approach we can take to dealing with this is to segment the 8-bit frame type namespace into two distinct categories and reserve a limited number of frame types from each for \"private use\". That is,\r\n\r\n0xxxxxxx => Control Frames\r\n1xxxxxxx => Data Frames\r\n\r\nControl Frames (0x00-7F) are always hop-by-hop and are not subject to flow control. Frame types 0x6B-7F would be reserved for \"private use\", meaning that these types could not be registered within the IANA registry. \r\n\r\nData Frames (0x80-FF) are always end-to-end and are subject to flow control. Frame types 0xEB-FF would be reserved for \"private use\". \r\n\r\nThe frame type of the existing DATA frame would change from 0x00 to 0x80, all other existing frame types would remain unchanged.\r\n\r\nThis approach gives us a clear way of dealing with extension frames, flow control, etc without introducing undue complexity.\r\n"
  }
]
